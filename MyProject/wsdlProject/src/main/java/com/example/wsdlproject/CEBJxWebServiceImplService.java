package com.example.wsdlproject;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 4.0.0
 * 2022-12-27T14:06:32.836+08:00
 * Generated source version: 4.0.0
 *
 */
@WebServiceClient(name = "CEBJxWebServiceImplService",
                  wsdlLocation = "file:/Users/baiwang/CODE/baiwang/MyProject/wsdlProject/src/main/java/com/example/wsdlproject/cebJxWebService.wsdl",
                  targetNamespace = "http://impl.service.web.custom.baiwang.com/")
public class CEBJxWebServiceImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://impl.service.web.custom.baiwang.com/", "CEBJxWebServiceImplService");
    public final static QName CEBJxWebServiceImplPort = new QName("http://impl.service.web.custom.baiwang.com/", "CEBJxWebServiceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/baiwang/CODE/baiwang/MyProject/wsdlProject/src/main/java/com/example/wsdlproject/cebJxWebService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CEBJxWebServiceImplService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/baiwang/CODE/baiwang/MyProject/wsdlProject/src/main/java/com/example/wsdlproject/cebJxWebService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CEBJxWebServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CEBJxWebServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CEBJxWebServiceImplService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public CEBJxWebServiceImplService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CEBJxWebServiceImplService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CEBJxWebServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns CEBJxWebService
     */
    @WebEndpoint(name = "CEBJxWebServiceImplPort")
    public CEBJxWebService getCEBJxWebServiceImplPort() {
        return super.getPort(CEBJxWebServiceImplPort, CEBJxWebService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CEBJxWebService
     */
    @WebEndpoint(name = "CEBJxWebServiceImplPort")
    public CEBJxWebService getCEBJxWebServiceImplPort(WebServiceFeature... features) {
        return super.getPort(CEBJxWebServiceImplPort, CEBJxWebService.class, features);
    }

}
